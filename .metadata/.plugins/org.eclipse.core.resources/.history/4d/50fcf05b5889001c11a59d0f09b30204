//BoardSErviceImpl.java

package com.hiseoul.ml.service;

import java.util.List;
import java.util.Optional;

import org.apache.logging.log4j.LogManager;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.hiseoul.ml.enumpkg.ServiceResult;
import com.hiseoul.ml.model.Board;
import com.hiseoul.ml.model.ErrorResponse;
import com.hiseoul.ml.model.Result;
import com.hiseoul.ml.repositories.BoardRepository;

@Service
public class BoardServiceImpl implements BoardService{
	private static final org.apache.logging.log4j.Logger
Logger=LogManager.getLogger(BoardServiceImpl.class);
	
	@Autowired
	BoardRepository repository;
	
	public Result updateBoared(Board board) {
		Optional<Board> search = repository.findById(board.getBoardno());
		Result result = new Result();
		if(search.isPresent()) {
			board = repository.save(board);
			result.setPayload(board);
		}else {
			result.setEror(new ErrorResponse(ServiceResult.NOTEEXIST.toString()));
		}
		return result;
		
	}
	
	public Result deleteBoared(int boardno) {
		Result result = new Result();
		boolean isPresent = repository.findById(boardno).isPresent();

		
		if(!isPresent) {
			result.setEror(new ErrorREsponse(ServiceResult.NOTEEXIST.toString()));
			
		}else {
			repository.deleteById(boardno);
		}
		return result;	
	}
	
	@Override
	public Result createBoard(Board board) {
			board = repository.save(board);
			Result result = new Result();
			result.setPayload(board);
			return result;
	}
	
	@Override
	public Result retrieveBoardList() {
			List<Board> list = repository.findAllByOrderByBoardnoDesc();
			Result reslt = new Result();
			result.setPayload(list);
			return result;
	}
	
}